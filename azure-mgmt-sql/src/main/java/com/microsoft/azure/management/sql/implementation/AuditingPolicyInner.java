/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.implementation;

import java.util.List;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.azure.management.sql.SqlSubResource;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Represents a Auditing Policy.
 */
@JsonFlatten
public class AuditingPolicyInner extends SqlSubResource {

    /**
     * The type of auditing policy.
     */
    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
    private String type;
    
    /**
     * The server location for auditing policy.
     */
    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
    private String location;

    /**
     * The auditingState for auditing policy.
     */
    @JsonProperty(value = "properties.auditingState", access = JsonProperty.Access.WRITE_ONLY)
    private String auditingState;

    /**
     * The eventTypesToAudit for auditing policy.
     */
    @JsonProperty(value = "properties.eventTypesToAudit", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> eventTypesToAudit;

    /**
     * The auditLogsTableName for auditing policy.
     */
    @JsonProperty(value = "properties.auditLogsTableName", access = JsonProperty.Access.WRITE_ONLY)
    private String auditLogsTableName;

    /**
     * Gets or sets retentionDays for auditing policy.
     */
    @JsonProperty(value = "properties.retentionDays", access = JsonProperty.Access.WRITE_ONLY)
    private String retentionDays;

    /**
     * Gets or sets storageAccountName for auditing policy.
     */
    @JsonProperty(value = "properties.storageAccountName", access = JsonProperty.Access.WRITE_ONLY)
    private String storageAccountName;

    /**
     * Gets or sets storageAccountKey for auditing policy.
     */
    @JsonProperty(value = "properties.storageAccountKey", access = JsonProperty.Access.WRITE_ONLY)
    private String storageAccountKey;

    /**
     * Gets or sets secondaryStorageAccountKey for service tier advisor.
     */
    @JsonProperty(value = "properties.secondaryStorageAccountKey", access = JsonProperty.Access.WRITE_ONLY)
    private String secondaryStorageAccountKey;

    /**
     * Gets or sets storageTableEndpoint for auditing policy.
     */
    @JsonProperty(value = "properties.storageTableEndpoint", access = JsonProperty.Access.WRITE_ONLY)
    private String storageTableEndpoint;

    /**
     * Gets or sets storageAccountResourceGroupName for auditing policy.
     */
    @JsonProperty(value = "properties.storageAccountResourceGroupName", access = JsonProperty.Access.WRITE_ONLY)
    private String storageAccountResourceGroupName;

    /**
     * Gets or sets storageAccountSubscriptionId for auditing policy.
     */
    @JsonProperty(value = "properties.storageAccountSubscriptionId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID storageAccountSubscriptionId;

    /**
     * Gets or sets storageAccountType for auditing policy.
     */
    @JsonProperty(value = "properties.storageAccountType", access = JsonProperty.Access.WRITE_ONLY)
    private String storageAccountType;

    /**
     * Gets or sets useServerDefault for auditing policy.
     */
    @JsonProperty(value = "properties.useServerDefault", access = JsonProperty.Access.WRITE_ONLY)
    private String useServerDefault;


	/**
	 * @return the type of the auditing policy
	 */
	public String type()
	{
		return type;
	}
    
	/**
	 * @return the server location for the auditing policy
	 */
	public String location()
	{
		return location;
	}

	/**
	 * @return the auditingState of the auditing policy
	 */
	public String auditingState()
	{
		return auditingState;
	}

	/**
	 * @return the eventTypesToAudit of the auditing policy
	 */
	public List<String> eventTypesToAudit()
	{
		return eventTypesToAudit;
	}

	/**
	 * @return the auditLogsTableName of the auditing policy
	 */
	public String auditLogsTableName()
	{
		return auditLogsTableName;
	}

	/**
	 * @return the retentionDays of the auditing policy
	 */
	public String retentionDays()
	{
		return retentionDays;
	}

	/**
	 * @return the storageAccountName of the auditing policy
	 */
	public String storageAccountName()
	{
		return storageAccountName;
	}

	/**
	 * @return the storageAccountKey of the auditing policy
	 */
	public String storageAccountKey()
	{
		return storageAccountKey;
	}

	/**
	 * @return the secondaryStorageAccountKey of the auditing policy
	 */
	public String secondaryStorageAccountKey()
	{
		return secondaryStorageAccountKey;
	}

	/**
	 * @return the storageTableEndpoint of the auditing policy
	 */
	public String storageTableEndpoint()
	{
		return storageTableEndpoint;
	}

	/**
	 * @return the storageAccountResourceGroupName of the auditing policy
	 */
	public String storageAccountResourceGroupName()
	{
		return storageAccountResourceGroupName;
	}

	/**
	 * @return the storageAccountSubscriptionId of the auditing policy
	 */
	public UUID storageAccountSubscriptionId()
	{
		return storageAccountSubscriptionId;
	}

	/**
	 * 
	 * @return the storageAccountType of the auditing policy
	 */
	public String storageAccountType()
	{
		return storageAccountType;
	}

	/**
	 * @return the useServerDefault of the auditing policy
	 */
	public String useServerDefault()
	{
		return useServerDefault;
	}
    
}
